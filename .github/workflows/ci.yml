name: CI

on:
  push:
    branches: [main, ci-v2]
  pull_request:
    branches: [main, ci-v2]
  workflow_dispatch:
    inputs:
      DEPLOY_ENV:
        description: "Ambiente de deploy"
        required: true
        type: string

env:
  ACTIONS_STEP_DEBUG: true

jobs:

  validate:
    name: Validate Shell Script
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.validate-step.outputs.status }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: validate-step
        name: Verify Syntax
        run: |
          if bash -n scripts/status-check.sh; then
            echo "status=Sintaxe válida" >> $GITHUB_OUTPUT
            echo "::notice::Script verificado com sucesso"
          else
            echo "status=Sintaxe inválida" >> $GITHUB_OUTPUT
            echo "::error::Erro de sintaxe no script!"
            exit 1
          fi

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: validate
    outputs:
      result: ${{ steps.test-step.outputs.status }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: test-step
        name: Run test simulation and save log
        run: |
          set -e
          echo "Running tests"
          echo "status=Comando de teste executado com sucesso" >> $GITHUB_OUTPUT
          echo "::notice::Testes executados corretamente"
          exit 0

  package:
    name: Package Report
    runs-on: ubuntu-latest
    needs: test
    outputs:
      artifact_path: report.zip
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Concatenate logs and zip
        run: |
          mkdir -p report
          echo "# Relatório de Execução – $(date)" > report/status.txt
          echo "Ambiente de deploy: ${{ github.event.inputs.DEPLOY_ENV }}" >> report/status.txt
          echo "Runner: ${{ runner.os }}" >> report/status.txt
          echo "Branch: ${{ github.ref_name }}" >> report/status.txt
          echo -e "\n--- [VALIDATE] ---" >> report/status.txt
          echo "${{ needs.validate.outputs.result }}" >> report/status.txt
          echo -e "\n--- [TEST] ---" >> report/status.txt
          echo "${{ needs.test.outputs.result }}" >> report/status.txt
          echo -e "\n--- [ARTEFATO] ---" >> report/status.txt
          echo "Artefato: report.zip" >> report/status.txt
          zip -r report.zip report/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: report
          path: report.zip

      - name: Adicionar resumo do job
        run: |
          echo "## Resumo da Execução" >> $GITHUB_STEP_SUMMARY
          echo "- Ambiente: $RUNNER_OS" >> $GITHUB_STEP_SUMMARY
          echo "- Branch: $GITHUB_REF_NAME" >> $GITHUB_STEP_SUMMARY
          echo "- Resultado VALIDATE: ${{ needs.validate.outputs.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Resultado TEST: ${{ needs.test.outputs.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Artefato: [report.zip](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: package
    environment:
      name: production
    steps:
      - name: Validar variável obrigatória
        run: |
          if [ -z "${{ github.event.inputs.DEPLOY_ENV }}" ]; then
            echo "::error::Variável DEPLOY_ENV não definida. Abortando."
            exit 1
          fi
          echo "::notice::Deploy autorizado para o ambiente ${{ github.event.inputs.DEPLOY_ENV }}"

      - name: Simular deploy
        run: echo "Deploy executado com sucesso para ${{ github.event.inputs.DEPLOY_ENV }}"